{"version":3,"sources":["../src/blog-publish.js"],"names":["commandListener","getFriendlyNameForBlogtype","blogType","notify","level","message","details","options","dismissable","detail","inkdrop","notifications","doPublish","friendlyName","err","console","error","doSync","config","ghostAdminToken","title","description","type","default","ghostContentToken","ghostUrl","wordpressUrl","wordpressUsername","wordpressPassword","activate","commands","add","document","body","deactivate","dispose"],"mappings":"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","sourcesContent":["'use babel'\n\nimport { publish, sync } from './publisher'\n\nlet commandListener = null\n\nfunction getFriendlyNameForBlogtype(blogType) {\n  if (blogType === 'GHOST') {\n    return 'Ghost'\n  } else if (blogType === 'WP') {\n    return 'Wordpress'\n  }\n\n  return ''\n}\n\nfunction notify(level, message, details) {\n  const options = {\n    dismissable: true,\n  }\n\n  if (typeof details === 'string') {\n    options.detail = details\n  }\n\n  inkdrop.notifications[`add${level}`](message, options)\n}\n\nasync function doPublish(blogType) {\n  try {\n    await publish(blogType)\n    const friendlyName = getFriendlyNameForBlogtype(blogType)\n    notify(\n      'Success',\n      `Successfully exported to ${friendlyName} Blog`,\n      `The selected note has been published to your ${friendlyName} Blog.`\n    )\n  } catch (err) {\n    console.error(err)\n    notify('Error', 'Something went wrong while exporting', err.message)\n  }\n}\n\nasync function doSync(blogType) {\n  try {\n    await sync(blogType)\n    const friendlyName = getFriendlyNameForBlogtype(blogType)\n    notify(\n      'Success',\n      `Successfully synched with ${friendlyName} Blog`,\n      `The selected note has been updated with the latest from your ${friendlyName} Blog.`\n    )\n  } catch (err) {\n    console.error(err)\n    notify('Error', 'Something went wrong while synching', err.message)\n  }\n}\n\nexport const config = {\n  ghostAdminToken: {\n    title: 'Ghost Admin API Token',\n    description: 'The token that is used to authenticate with when publishing to Ghost Blog',\n    type: 'string',\n    default: '',\n  },\n  ghostContentToken: {\n    title: 'Ghost Content API Token',\n    description: 'The token that is used to authenticate with when publishing to Ghost Blog',\n    type: 'string',\n    default: '',\n  },\n  ghostUrl: {\n    title: 'Ghost URL',\n    description: 'The url used to communicate with Ghost',\n    type: 'string',\n    default: '',\n  },\n  wordpressUrl: {\n    title: 'Wordpress URL',\n    description: 'The url used to communicate with Wordpress',\n    type: 'string',\n    default: '',\n  },\n  wordpressUsername: {\n    title: 'Wordpress Username',\n    description: 'The username to be used to publish articles',\n    type: 'string',\n    default: '',\n  },\n  wordpressPassword: {\n    title: 'Wordpress Password',\n    description: 'The password for the matching username',\n    type: 'string',\n    default: '',\n  },\n}\n\nexport function activate() {\n  commandListener = inkdrop.commands.add(document.body, {\n    'blog-publish:publish-ghost-single': () => doPublish('GHOST'),\n    'blog-publish:sync-ghost-single': () => doSync('GHOST'),\n    'blog-publish:publish-wp-single': () => doPublish('WP'),\n    'blog-publish:sync-wp-single': () => doSync('WP'),\n  })\n}\n\nexport function deactivate() {\n  commandListener.dispose()\n}\n"],"file":"blog-publish.js"}