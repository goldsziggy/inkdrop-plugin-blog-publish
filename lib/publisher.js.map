{"version":3,"sources":["../src/publisher.js"],"names":["showdown","require","getWPAPIObj","endpoint","inkdrop","config","get","username","password","WPAPI","getGhostAPIObj","contentToken","adminToken","url","admin","GhostAdminAPI","key","version","client","GhostContentAPI","getPosts","blogType","api","posts","adminApi","browse","limit","formats","Error","findPostWithTitle","title","find","post","rendered","getPostHTML","content","console","log","html","createNewPost","create","add","source","editPost","foundPost","id","update","edit","updated_at","publish","noteListBar","notes","store","getState","noteIds","actionTargetNoteIds","length","Object","keys","hashedItems","files","noteId","note","body","converter","Converter","value","entries","makeHtml","found","e","sync","cm","getActiveEditor","md","makeMarkdown","doc","setValue"],"mappings":"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","sourcesContent":["// inspiration\n// https://github.com/jmerle/inkdrop-export-as-gist/blob/master/src/exporter.js\n'use babel'\nimport GhostAdminAPI from '@tryghost/admin-api'\nimport GhostContentAPI from '@tryghost/content-api'\nimport WPAPI from 'wpapi'\nconst showdown = require('showdown')\n\nfunction getWPAPIObj() {\n  const endpoint = inkdrop.config.get('blog-publish.wordpressUrl')\n  const username = inkdrop.config.get('blog-publish.wordpressUsername')\n  const password = inkdrop.config.get('blog-publish.wordpressPassword')\n\n  return new WPAPI({\n    endpoint,\n    username,\n    password,\n  })\n}\n\nfunction getGhostAPIObj() {\n  const contentToken = inkdrop.config.get('blog-publish.ghostContentToken')\n  const adminToken = inkdrop.config.get('blog-publish.ghostAdminToken')\n  const url = inkdrop.config.get('blog-publish.ghostUrl')\n\n  // leaving the content API in here in case there is a need in the future\n  return {\n    admin: new GhostAdminAPI({\n      url,\n      key: adminToken,\n      version: 'v3',\n    }),\n    client: new GhostContentAPI({\n      url,\n      key: contentToken,\n      version: 'v3',\n    }),\n  }\n}\n\nfunction getPosts(blogType) {\n  if (blogType === 'WP') {\n    const api = getWPAPIObj()\n    return api.posts()\n  } else if (blogType === 'GHOST') {\n    const { admin: adminApi } = getGhostAPIObj()\n    return adminApi.posts.browse({ limit: 'all', formats: ['html'] })\n  }\n  throw new Error('Unsupported blog-type in getPosts')\n}\n\nfunction findPostWithTitle({ blogType, posts, title }) {\n  if (blogType === 'WP') {\n    return posts.find((post) => post.title.rendered === title)\n  } else if (blogType === 'GHOST') {\n    return posts.find((post) => post.title === title)\n  }\n\n  throw new Error('Unsupported blog-type in findPostWithTitle')\n}\n\nfunction getPostHTML({ blogType, post }) {\n  if (blogType === 'WP') {\n    return post.content.rendered\n  } else if (blogType === 'GHOST') {\n    console.log({ post })\n    return post.html\n  }\n\n  throw new Error('Unsupported blog-type in getPostHTML')\n}\n\nfunction createNewPost({ blogType, title, html }) {\n  if (blogType === 'WP') {\n    const api = getWPAPIObj()\n    return api.posts().create({ title, content: html })\n  } else if (blogType === 'GHOST') {\n    const { admin: adminApi } = getGhostAPIObj()\n    return adminApi.posts.add({ title, html }, { source: 'html' })\n  }\n\n  throw new Error('Unsupported blog-type in getPostHTML')\n}\n\nfunction editPost({ blogType, foundPost, html, title }) {\n  if (blogType === 'WP') {\n    const api = getWPAPIObj()\n    return api.posts().id(foundPost.id).update({ content: html })\n  } else if (blogType === 'GHOST') {\n    const { admin: adminApi } = getGhostAPIObj()\n    return adminApi.posts.edit(\n      { id: foundPost.id, title, html, updated_at: foundPost.updated_at },\n      { source: 'html' }\n    )\n  }\n\n  throw new Error('Unsupported blog-type in getPostHTML')\n}\n\nexport async function publish(blogType) {\n  const { noteListBar, notes } = inkdrop.store.getState()\n  const noteIds = noteListBar.actionTargetNoteIds\n\n  if (noteIds.length === 0 || Object.keys(notes.hashedItems).length === 0) {\n    throw new Error('No note(s) selected.')\n  }\n\n  const files = {}\n\n  for (const noteId of noteIds) {\n    const note = notes.hashedItems[noteId]\n    files[note.title] = { content: note.body }\n  }\n\n  try {\n    const { noteListBar, notes } = inkdrop.store.getState()\n    const noteIds = noteListBar.actionTargetNoteIds\n\n    if (noteIds.length === 0 || Object.keys(notes.hashedItems).length === 0) {\n      throw new Error('No note(s) selected.')\n    }\n\n    const files = {}\n\n    for (const noteId of noteIds) {\n      const note = notes.hashedItems[noteId]\n      files[note.title] = { content: note.body }\n    }\n\n    const posts = await getPosts(blogType)\n    const converter = new showdown.Converter()\n\n    for (const [key, value] of Object.entries(files)) {\n      const html = converter.makeHtml(value.content)\n\n      const found = findPostWithTitle({ blogType, posts, title: key })\n\n      if (found) {\n        await editPost({ blogType, foundPost: found, html, title: key })\n      } else {\n        await createNewPost({ blogType, title: key, html })\n      }\n    }\n  } catch (e) {\n    console.log('itz broken!', e)\n    throw e\n  }\n\n  return true\n}\n\nexport async function sync(blogType) {\n  const { noteListBar, notes } = inkdrop.store.getState()\n  const noteIds = noteListBar.actionTargetNoteIds\n\n  if (noteIds.length === 0 || Object.keys(notes.hashedItems).length === 0) {\n    throw new Error('No note(s) selected.')\n  }\n\n  const files = {}\n\n  for (const noteId of noteIds) {\n    const note = notes.hashedItems[noteId]\n    files[note.title] = { content: note.body }\n  }\n\n  try {\n    const { noteListBar, notes } = inkdrop.store.getState()\n    const { cm } = inkdrop.getActiveEditor()\n\n    const noteIds = noteListBar.actionTargetNoteIds\n\n    if (noteIds.length === 0 || Object.keys(notes.hashedItems).length === 0) {\n      throw new Error('No note(s) selected.')\n    }\n\n    const files = {}\n\n    for (const noteId of noteIds) {\n      const note = notes.hashedItems[noteId]\n      files[note.title] = { content: note.body }\n    }\n\n    const posts = await getPosts(blogType)\n\n    const converter = new showdown.Converter()\n\n    for (const [key, value] of Object.entries(files)) {\n      const found = findPostWithTitle({ blogType, posts, title: key })\n      if (found) {\n        const md = converter.makeMarkdown(getPostHTML({ blogType, post: found }))\n\n        cm.doc.setValue(md)\n      }\n    }\n  } catch (e) {\n    console.log('itz broken!', e)\n    throw e\n  }\n\n  return true\n}\n"],"file":"publisher.js"}